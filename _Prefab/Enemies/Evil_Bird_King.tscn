[gd_scene load_steps=11 format=2]

[ext_resource path="res://_Assets/Art/Air Artwork/Spritesheets/Evil Bird/sprite_0.png" type="Texture" id=1]
[ext_resource path="res://_Assets/Art/Air Artwork/Spritesheets/Evil Bird/sprite_1.png" type="Texture" id=2]
[ext_resource path="res://_Assets/Art/Air Artwork/Spritesheets/Evil Bird/sprite_2.png" type="Texture" id=3]
[ext_resource path="res://_Assets/Art/Air Artwork/Spritesheets/Evil Bird/sprite_3.png" type="Texture" id=4]
[ext_resource path="res://_Prefab/Heart.tscn" type="PackedScene" id=5]

[sub_resource type="GDScript" id=8]

script/source = "extends KinematicBody2D

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

onready var anim = get_node(\"AnimationPlayer\")
onready var hitbox = get_node(\"Hitbox\")

var velocity = Vector2(0,0)

var WALK_FORCE
var WALK_MIN_SPEED
var WALK_MAX_SPEED
var STOP_FORCE
var dir
var hit_marker = false

var enemy_knockback = 1000


var ai_movement_timer = 0
var ai_movement_cooldown = 1

var hit = false
var knockback_vel = Vector2(0,0)
var cooldown_duration = 0.5
var cooldown_timer = 0
var knockback_duration = 0.1
var knockback_timer = 0
var knockedback = false

var health = 3

var xp_drop = true
var xp = 6

onready var xp_pickup = preload(\"res://_Prefab/Pickups/XP_Pickup.tscn\")

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	anim.play(\"Moving\")
	
	pass

func _physics_process(delta):

	var areas = hitbox.get_overlapping_areas()
	var bodies = hitbox.get_overlapping_bodies()

	if (len(areas) == 0):
		hit_marker = false

	for body in bodies:
		if body.name == \"Hazard\":
			die()

	# HIT COOLDOWN
	if (hit == true and cooldown_timer < cooldown_duration):

		cooldown_timer += delta

	if (knockedback == true and knockback_timer < knockback_duration):
		velocity += knockback_vel * 15 *  delta
		knockback_timer += delta

	if (knockedback == true and knockback_timer > knockback_duration):
		velocity.x = 0
		knockedback = false

	if (hit == true and cooldown_timer > cooldown_duration):
		hit = false

	#KNOCKBACK

	for body in bodies:

		if (body.is_in_group(\"bullet\")):

			if (hit == false):
				handle_attack(body)
				cooldown_timer = 0
				hit = true
				knockback_timer = 0
				knockedback = true

		pass

	for area in areas:
		var hit_a_marker = false

		if (area.is_in_group(\"weapon\")):

			if (hit == false):
				handle_attack(area)
				cooldown_timer = 0
				hit = true
				knockback_timer = 0
				knockedback = true

		if (area.is_in_group(\"enemy_marker\")):
			hit_a_marker = true

			if (hit_marker == false):
				hit_marker = true
				if (dir == \"left\"):
					ai_movement_timer = 0
					WALK_MAX_SPEED = 200
					dir = \"right\"
				elif (dir == \"right\"):
					position.x -= 30
					ai_movement_timer = 0
					WALK_MAX_SPEED = 200
					dir = \"left\"

		hit_marker = hit_a_marker

	#check health
	display_health(health)

	if health <= 0:
		die()

	pass

func die():

	## Spawn Drops

	for x in range(xp):
		var xp_pickup_node = xp_pickup.instance()
		get_tree().get_root().get_node(\"World\").add_child(xp_pickup_node)
		xp_pickup_node.global_position = global_position
		xp_pickup_node.scale = Vector2(1,1)

	## End Code


	queue_free()

func handle_attack(weapon):
	var dir = weapon.attack_dir
	var knockback = weapon.knockback_factor

	if (dir == \"left\"):
		knockback_vel = Vector2(-knockback, 0)
	elif (dir == \"right\"):
		knockback_vel = Vector2(knockback, 0)

	health -= 1

	print (str(knockback))
	print (str(dir))
	print (\"HIT\")

func display_health(health):

	var health_display = get_node(\"Hearts\")

	var hearts = health_display.get_children()

	var cnt = 0
	for heart in hearts:
		cnt += 1

		if (cnt > health):
			heart.hide()
		else:
			heart.show()

	pass
"

[sub_resource type="SpriteFrames" id=6]

animations = [ {
"frames": [ ExtResource( 1 ), ExtResource( 2 ), ExtResource( 3 ), ExtResource( 4 ) ],
"loop": true,
"name": "moving",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=2]

custom_solver_bias = 0.0
extents = Vector2( 21.2141, 24.4395 )

[sub_resource type="RectangleShape2D" id=7]

custom_solver_bias = 0.0
extents = Vector2( 26.178, 28.5963 )

[sub_resource type="Animation" id=4]

resource_name = "Moving"
length = 2.0
loop = true
step = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( 165.85, 0 ), Vector2( 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AnimatedSprite:flip_h")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ false, true, false ]
}

[node name="Evil_Bird_King" type="KinematicBody2D" index="0"]

position = Vector2( 128.388, 0 )
input_pickable = false
collision_layer = 1
collision_mask = 1
collision/safe_margin = 0.08
script = SubResource( 8 )
_sections_unfolded = [ "Transform" ]

[node name="AnimatedSprite" type="AnimatedSprite" parent="." index="0"]

scale = Vector2( 4, 4 )
frames = SubResource( 6 )
animation = "moving"
frame = 2
playing = true
flip_h = true
_sections_unfolded = [ "Transform" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="." index="1"]

position = Vector2( 0, 4.35365 )
scale = Vector2( 1, 1.15679 )
shape = SubResource( 2 )

[node name="Hitbox" type="Area2D" parent="." index="2"]

input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Hitbox" index="0"]

position = Vector2( 0, 4.35365 )
scale = Vector2( 1, 1.15679 )
shape = SubResource( 7 )

[node name="Health" type="Node2D" parent="." index="3"]

editor/display_folded = true

[node name="Heart" parent="Health" index="0" instance=ExtResource( 5 )]

position = Vector2( -17.4528, -42.9224 )

[node name="Heart2" parent="Health" index="1" instance=ExtResource( 5 )]

position = Vector2( 0.942547, -42.6304 )

[node name="Heart3" parent="Health" index="2" instance=ExtResource( 5 )]

position = Vector2( 19.3379, -43.2144 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="." index="4"]

root_node = NodePath("..")
autoplay = ""
playback_process_mode = 1
playback_default_blend_time = 0.0
playback_speed = 1.0
anims/Moving = SubResource( 4 )
blend_times = [  ]


