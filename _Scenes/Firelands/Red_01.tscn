[gd_scene load_steps=25 format=2]

[ext_resource path="res://_Scripts/level_script.gd" type="Script" id=1]
[ext_resource path="res://_Scripts/NPC_Behavior/Birdo.gd" type="Script" id=2]
[ext_resource path="res://_Assets/Art/Spritesheets/Rod-Birdo/birdo_0.png" type="Texture" id=3]
[ext_resource path="res://_Assets/Art/Spritesheets/Rod-Birdo/birdo_1.png" type="Texture" id=4]
[ext_resource path="res://_Fonts/imported_fonts/pixel_font.tres" type="DynamicFont" id=5]
[ext_resource path="res://_Tileset/normal_world.tres" type="TileSet" id=6]
[ext_resource path="res://_Tileset/hazards.tres" type="TileSet" id=7]
[ext_resource path="res://_Prefab/trees/tree1.tscn" type="PackedScene" id=8]
[ext_resource path="res://_Prefab/Coins/Coin.tscn" type="PackedScene" id=9]
[ext_resource path="res://_Scripts/Sign.gd" type="Script" id=10]
[ext_resource path="res://_Assets/Art/Sign_Post.png" type="Texture" id=11]
[ext_resource path="res://_Fonts/Roboto-Regular.ttf" type="DynamicFontData" id=12]
[ext_resource path="res://_Fonts/Munro.ttf" type="DynamicFontData" id=13]
[ext_resource path="res://_Prefab/Pickups/Weapon_Pickup.tscn" type="PackedScene" id=14]
[ext_resource path="res://_Prefab/Door.tscn" type="PackedScene" id=15]
[ext_resource path="res://_Prefab/Players/Player.tscn" type="PackedScene" id=16]
[ext_resource path="res://_Prefab/Enemies/Enemy_01.tscn" type="PackedScene" id=17]
[ext_resource path="res://_Prefab/HUD.tscn" type="PackedScene" id=18]

[sub_resource type="GDScript" id=1]

script/source = "extends Node2D

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

var type = \"red\"
var level = 1

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[sub_resource type="SpriteFrames" id=2]

animations = [ {
"frames": [ ExtResource( 3 ), ExtResource( 4 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=3]

custom_solver_bias = 0.0
extents = Vector2( 10, 10 )

[sub_resource type="RectangleShape2D" id=4]

custom_solver_bias = 0.0
extents = Vector2( 27.2451, 19.5441 )

[sub_resource type="DynamicFont" id=5]

size = 48
use_mipmaps = false
use_filter = false
font_data = ExtResource( 13 )
fallback/0 = ExtResource( 12 )
_sections_unfolded = [ "Font/fallback", "Settings" ]

[sub_resource type="GDScript" id=6]

script/source = "extends KinematicBody2D

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

const GRAVITY = 700.0

onready var anim = get_node(\"AnimatedSprite\")
onready var hitbox = get_node(\"Hitbox\")

var velocity = Vector2(200,0)

var WALK_FORCE
var WALK_MIN_SPEED
var WALK_MAX_SPEED
var STOP_FORCE
var dir
var hit_marker = false

var enemy_knockback = 1000

var ai_movement_timer = 0
var ai_movement_cooldown = 1

var hit = false
var knockback_vel = Vector2(0,0)
var cooldown_duration = 0.5
var cooldown_timer = 0
var knockback_duration = 0.1
var knockback_timer = 0
var knockedback = false

var health = 3

var xp_drop = true
var xp = 6

onready var xp_pickup = preload(\"res://_Prefab/Pickups/XP_Pickup.tscn\")

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	
	WALK_FORCE = 600
	WALK_MIN_SPEED = 10
	WALK_MAX_SPEED = 200
	STOP_FORCE = 1300
	
	dir = \"left\"
	
	pass

func _physics_process(delta):
	
	var force = Vector2(0, GRAVITY)
	
	var stop = true
	
	var walk_left
	var walk_right
	
	ai_movement_timer += delta
	
	if (ai_movement_timer > ai_movement_cooldown):
		var random_range = rand_range(0,1)
		WALK_MAX_SPEED = rand_range(200, 1000)
		if (random_range <= 0.5):
			dir = \"left\"
		else:
			dir = \"right\"
		
		ai_movement_timer = 0 
	
	if (dir == \"left\"):
		walk_left = true
		walk_right = false
	elif (dir == \"right\"):
		walk_left = false
		walk_right = true
		
	if not stop:
		if (anim.is_playing() == false or anim.animation == \"still\" and is_on_floor()):
			anim.play(\"move\")
	
	if stop:
		
		var vsign = sign(velocity.x)
		var vlen = abs(velocity.x)
		
		vlen -= STOP_FORCE * delta
		if vlen < 0:
			vlen = 0
		
		velocity.x = vlen * vsign
	
	velocity += force * delta	
	# Integrate velocity into motion and move
	velocity = move_and_slide(velocity, Vector2(0, -1))
	
	if (velocity == Vector2(0,0)):
		anim.stop()
		if (anim.is_playing() == false):
			anim.play(\"still\")
	
	var areas = hitbox.get_overlapping_areas()
	var bodies = hitbox.get_overlapping_bodies()
	
	if (len(areas) == 0):
		hit_marker = false
	
	for body in bodies:
		if body.name == \"Hazard\":
			die()
	
	# HIT COOLDOWN
	if (hit == true and cooldown_timer < cooldown_duration):
		
		cooldown_timer += delta
	
	if (knockedback == true and knockback_timer < knockback_duration):
		velocity += knockback_vel * 15 *  delta
		knockback_timer += delta
	
	if (knockedback == true and knockback_timer > knockback_duration):
		velocity.x = 0
		knockedback = false
	
	if (hit == true and cooldown_timer > cooldown_duration):
		hit = false
	
	#KNOCKBACK
	
	for body in bodies:
		
		if (body.is_in_group(\"bullet\")):
			
			if (hit == false):
				handle_attack(body)
				cooldown_timer = 0
				hit = true
				knockback_timer = 0
				knockedback = true
		
		pass
	
	for area in areas:
		var hit_a_marker = false
		
		if (area.is_in_group(\"weapon\")):
			
			if (hit == false):
				handle_attack(area)
				cooldown_timer = 0
				hit = true
				knockback_timer = 0
				knockedback = true
		
		if (area.is_in_group(\"enemy_marker\")):
			hit_a_marker = true
			
			if (hit_marker == false):
				hit_marker = true
				if (dir == \"left\"):
					ai_movement_timer = 0
					WALK_MAX_SPEED = 200
					dir = \"right\"
				elif (dir == \"right\"):
					position.x -= 30
					ai_movement_timer = 0
					WALK_MAX_SPEED = 200
					dir = \"left\"
					
		hit_marker = hit_a_marker
	
	#check health
	display_health(health)
	
	if health <= 0:
		die()
	
	pass

func die():
	
	## Spawn Drops
	
	for x in range(xp):	
		var xp_pickup_node = xp_pickup.instance()
		get_tree().get_root().get_node(\"World\").add_child(xp_pickup_node)
		xp_pickup_node.global_position = global_position
		xp_pickup_node.scale = Vector2(1,1)
		
	## End Code
	
	
	queue_free()

func handle_attack(weapon):
	var dir = weapon.attack_dir
	var knockback = weapon.knockback_factor
	
	if (dir == \"left\"):
		knockback_vel = Vector2(-knockback, 0)
	elif (dir == \"right\"):
		knockback_vel = Vector2(knockback, 0)
			
	health -= 1
	
	print (str(knockback))
	print (str(dir))
	print (\"HIT\")

func display_health(health):
	
	var health_display = get_node(\"Hearts\")
	
	var hearts = health_display.get_children()
	
	var cnt = 0
	for heart in hearts:
		cnt += 1
		
		if (cnt > health):
			heart.hide()
		else:
			heart.show()
	
	pass

#func _process(delta):
#	# Called every frame. Delta is time since last frame.
#	# Update game logic here.
#	pass
"

[node name="World" type="Node" index="0" groups=[
"enemy_kill_level",
]]

script = ExtResource( 1 )
reset_position = Vector2( 100, 400 )

[node name="level_info" type="Node2D" parent="." index="0"]

script = SubResource( 1 )

[node name="NPCS" type="Node2D" parent="." index="1"]

editor/display_folded = true

[node name="Birdo-NPC" type="Area2D" parent="NPCS" index="0"]

editor/display_folded = true
position = Vector2( 1040, 656 )
input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"
script = ExtResource( 2 )

[node name="AnimatedSprite" type="AnimatedSprite" parent="NPCS/Birdo-NPC" index="0"]

scale = Vector2( 4, 4 )
frames = SubResource( 2 )
animation = "default"
frame = 1
playing = true
flip_h = true
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="NPCS/Birdo-NPC" index="1"]

scale = Vector2( 2.5, 2.5 )
shape = SubResource( 3 )
_sections_unfolded = [ "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="CanvasLayer" type="CanvasLayer" parent="NPCS/Birdo-NPC" index="2"]

editor/display_folded = true
layer = 1
offset = Vector2( 0, 0 )
rotation = 0.0
scale = Vector2( 1, 1 )
transform = Transform2D( 1, 0, 0, 1, 0, 0 )

[node name="Popup" type="PopupPanel" parent="NPCS/Birdo-NPC/CanvasLayer" index="0"]

visible = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 62.0
margin_top = 470.0
margin_right = 976.0
margin_bottom = 544.0
rect_pivot_offset = Vector2( 0, 0 )
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
popup_exclusive = false

[node name="Label" type="RichTextLabel" parent="NPCS/Birdo-NPC/CanvasLayer/Popup" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 178.0
margin_top = 26.0
margin_right = 802.0
margin_bottom = 58.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = true
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_fonts/normal_font = ExtResource( 5 )
bbcode_enabled = false
bbcode_text = ""
visible_characters = -1
percent_visible = 1.0
meta_underlined = true
tab_size = 4
text = "Defeat that enemy! Use the interact action!"
scroll_active = false
scroll_following = false
selection_enabled = false
override_selected_font_color = false
_sections_unfolded = [ "custom_fonts" ]

[node name="Chests" type="Node2D" parent="." index="2"]

[node name="Tiles" type="Node2D" parent="." index="3"]

editor/display_folded = true

[node name="Ground" type="TileMap" parent="Tiles" index="0"]

scale = Vector2( 4, 4 )
mode = 0
tile_set = ExtResource( 6 )
cell_size = Vector2( 16, 16 )
cell_quadrant_size = 16
cell_custom_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
cell_half_offset = 2
cell_tile_origin = 0
cell_y_sort = false
cell_clip_uv = false
collision_use_kinematic = false
collision_friction = 1.0
collision_bounce = 0.0
collision_layer = 3
collision_mask = 1
occluder_light_mask = 1
format = 1
tile_data = PoolIntArray( 458752, 4, 0, 458753, 4, 0, 458754, 4, 0, 458755, 4, 0, 458756, 4, 0, 458757, 4, 0, 458758, 4, 0, 458759, 4, 0, 458760, 4, 0, 458761, 4, 0, 458762, 4, 0, 458763, 4, 0, 589820, 4, 0, 589821, 4, 0, 589822, 4, 0, 589823, 4, 0, 524288, 5, 0, 524289, 5, 0, 524290, 5, 0, 524291, 5, 0, 524292, 5, 0, 524293, 5, 0, 524294, 5, 0, 524295, 5, 0, 524296, 5, 0, 524297, 5, 0, 524298, 5, 0, 524299, 5, 0, 655356, 5, 0, 655357, 5, 0, 655358, 5, 0, 655359, 5, 0, 589824, 5, 0, 589825, 5, 0, 589826, 5, 0, 589827, 5, 0, 589828, 5, 0, 589829, 5, 0, 589830, 5, 0, 589831, 5, 0, 589832, 5, 0, 589833, 5, 0, 589834, 5, 0, 589835, 5, 0, 720892, 5, 0, 720893, 5, 0, 720894, 5, 0, 720895, 5, 0, 655360, 6, 0, 655361, 6, 0, 655362, 6, 0, 655363, 6, 0, 655364, 6, 0, 655365, 6, 0, 655366, 6, 0, 655367, 6, 0, 655368, 6, 0, 655369, 6, 0, 655370, 6, 0, 655371, 6, 0, 655380, 7, 0, 655381, 7, 0, 655382, 7, 0, 655385, 7, 0, 655386, 7, 0, 655387, 7, 0, 655388, 7, 0, 720896, 6, 0, 720897, 6, 0, 720898, 6, 0, 720899, 6, 0, 720900, 6, 0, 720901, 6, 0, 720902, 6, 0, 720903, 6, 0, 720904, 6, 0, 720905, 6, 0, 720906, 6, 0, 720907, 6, 0, 720908, 7, 0, 720909, 7, 0, 720910, 7, 0, 720911, 7, 0, 720912, 7, 0, 720913, 7, 0, 720914, 7, 0, 720915, 7, 0, 720916, 6, 0, 720917, 6, 0, 720918, 6, 0, 720921, 6, 0, 720922, 6, 0, 720923, 6, 0, 720924, 6, 0, 786432, 6, 0, 786433, 6, 0, 786434, 6, 0, 786435, 6, 0, 786436, 6, 0, 786437, 6, 0, 786438, 6, 0, 786439, 6, 0, 786440, 6, 0, 786441, 6, 0, 786442, 6, 0, 786443, 6, 0, 786444, 6, 0, 786445, 6, 0, 786446, 6, 0, 786447, 6, 0, 786448, 6, 0, 786449, 6, 0, 786450, 6, 0, 786451, 6, 0, 786452, 6, 0, 786453, 6, 0, 786454, 6, 0, 786457, 6, 0, 786458, 6, 0, 786459, 6, 0, 786460, 6, 0, 851968, 6, 0, 851969, 6, 0, 851970, 6, 0, 851971, 6, 0, 851972, 6, 0, 851973, 6, 0, 851974, 6, 0, 851975, 6, 0, 851976, 6, 0, 851977, 6, 0, 851978, 6, 0, 851979, 6, 0, 851980, 6, 0, 851981, 6, 0, 851982, 6, 0, 851983, 6, 0, 851984, 6, 0, 851985, 6, 0, 851986, 6, 0, 851987, 6, 0, 851988, 6, 0, 851989, 6, 0, 851990, 6, 0, 851993, 6, 0, 851994, 6, 0, 851995, 6, 0, 851996, 6, 0 )
_sections_unfolded = [ "Cell", "Collision", "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="Hazard" type="TileMap" parent="Tiles" index="1"]

scale = Vector2( 4, 4 )
mode = 0
tile_set = ExtResource( 7 )
cell_size = Vector2( 16, 16 )
cell_quadrant_size = 16
cell_custom_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
cell_half_offset = 2
cell_tile_origin = 0
cell_y_sort = false
cell_clip_uv = false
collision_use_kinematic = false
collision_friction = 1.0
collision_bounce = 0.0
collision_layer = 1
collision_mask = 1
occluder_light_mask = 1
format = 1
tile_data = PoolIntArray( 65528, 0, 0, 65529, 0, 0, 131064, 0, 0, 131065, 0, 0, 196600, 0, 0, 196601, 0, 0, 262136, 0, 0, 262137, 0, 0, 327672, 0, 0, 327673, 0, 0, 393208, 0, 0, 393209, 0, 0, 458744, 0, 0, 458745, 0, 0, 524280, 0, 0, 524281, 0, 0, 458758, 2, 0, 458759, 2, 0, 589816, 0, 0, 589817, 0, 0, 655352, 0, 0, 655353, 0, 0, 720888, 0, 0, 720889, 0, 0, 786424, 0, 0, 786425, 0, 0, 851960, 0, 0, 851961, 0, 0, 786454, 2, 0, 786455, 0, 0, 786456, 0, 0, 917496, 0, 0, 917497, 0, 0, 917498, 0, 0, 917499, 2, 0, 851990, 2, 0, 851991, 0, 0, 851992, 0, 0, 983032, 2, 0, 983033, 0, 0, 983034, 0, 0, 983035, 0, 0, 983036, 0, 0, 983037, 0, 0, 983038, 0, 0, 983039, 0, 0, 917526, 2, 0, 917527, 2, 0, 917528, 2, 0, 917529, 2, 0, 1048568, 2, 0, 1048569, 0, 0, 1048570, 0, 0, 1048571, 0, 0, 1048572, 0, 0, 1048573, 0, 0, 1048574, 0, 0, 1048575, 0, 0 )
_sections_unfolded = [ "Cell", "Collision", "Transform" ]
__meta__ = {
"_edit_lock_": true
}

[node name="Water" type="Node2D" parent="Tiles" index="2"]

modulate = Color( 1, 1, 1, 0.588235 )
z_index = 2
_sections_unfolded = [ "Transform", "Visibility", "Z Index" ]

[node name="Trees" type="Node2D" parent="Tiles" index="3"]

editor/display_folded = true

[node name="Sprite" parent="Tiles/Trees" index="0" instance=ExtResource( 8 )]

position = Vector2( 544, 368 )

[node name="Ice" type="Node2D" parent="Tiles" index="4"]

[node name="Gems" type="Node2D" parent="." index="4"]

[node name="Coins" type="Node2D" parent="." index="5"]

editor/display_folded = true

[node name="Coin" parent="Coins" index="0" instance=ExtResource( 9 )]

position = Vector2( 816, 368 )

[node name="Coin2" parent="Coins" index="1" instance=ExtResource( 9 )]

position = Vector2( 880, 416 )

[node name="Coin3" parent="Coins" index="2" instance=ExtResource( 9 )]

position = Vector2( 928, 480 )

[node name="Coin4" parent="Coins" index="3" instance=ExtResource( 9 )]

position = Vector2( 1488, 576 )

[node name="Coin5" parent="Coins" index="4" instance=ExtResource( 9 )]

position = Vector2( 1568, 544 )

[node name="Coin6" parent="Coins" index="5" instance=ExtResource( 9 )]

position = Vector2( 1568, 544 )

[node name="Coins_R" type="Node2D" parent="." index="6"]

[node name="Signs" type="Node2D" parent="." index="7"]

editor/display_folded = true
position = Vector2( 97.7842, 416.212 )

[node name="Sign" type="Area2D" parent="Signs" index="0"]

position = Vector2( 590.216, -0.212006 )
input_pickable = true
gravity_vec = Vector2( 0, 1 )
gravity = 98.0
linear_damp = 0.1
angular_damp = 1.0
audio_bus_override = false
audio_bus_name = "Master"
script = ExtResource( 10 )

[node name="Sprite" type="Sprite" parent="Signs/Sign" index="0"]

scale = Vector2( 4, 4 )
texture = ExtResource( 11 )
_sections_unfolded = [ "Transform" ]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Signs/Sign" index="1"]

position = Vector2( 0.713486, -12.4823 )
scale = Vector2( 1, 0.942137 )
shape = SubResource( 4 )

[node name="CanvasLayer" type="CanvasLayer" parent="Signs/Sign" index="2"]

layer = 1
offset = Vector2( 0, 0 )
rotation = 0.0
scale = Vector2( 1, 1 )
transform = Transform2D( 1, 0, 0, 1, 0, 0 )

[node name="PopupPanel" type="PopupPanel" parent="Signs/Sign/CanvasLayer" index="0"]

visible = false
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 62.0
margin_top = 470.0
margin_right = 967.0
margin_bottom = 579.0
rect_pivot_offset = Vector2( 0, 0 )
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
popup_exclusive = false
_sections_unfolded = [ "Rect" ]

[node name="RichTextLabel" type="RichTextLabel" parent="Signs/Sign/CanvasLayer/PopupPanel" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 242.0
margin_top = 26.0
margin_right = 738.0
margin_bottom = 88.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = true
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_fonts/normal_font = SubResource( 5 )
bbcode_enabled = false
bbcode_text = ""
visible_characters = -1
percent_visible = 1.0
meta_underlined = true
tab_size = 4
text = "Go to the right. Trust me"
scroll_active = true
scroll_following = false
selection_enabled = false
override_selected_font_color = false

[node name="Platforms" type="Node2D" parent="." index="8"]

[node name="Pickups" type="Node2D" parent="." index="9"]

editor/display_folded = true
scale = Vector2( 6.5625, 6.5625 )
_sections_unfolded = [ "Transform" ]

[node name="Weapon_Pickup" parent="Pickups" index="0" instance=ExtResource( 14 )]

position = Vector2( 136.533, 102.4 )
scale = Vector2( 0.1, 0.1 )

[node name="Door" parent="." index="10" instance=ExtResource( 15 )]

position = Vector2( 1792, 576 )

[node name="Player" parent="." index="11" instance=ExtResource( 16 )]

position = Vector2( 192, 288 )

[node name="Enemies" type="Node2D" parent="." index="12"]

editor/display_folded = true
_sections_unfolded = [ "Transform" ]

[node name="Enemy_01" parent="Enemies" index="0" instance=ExtResource( 17 )]

position = Vector2( 1232, 656 )
script = SubResource( 6 )

[node name="Enemy_Markers" type="Node2D" parent="." index="13"]

position = Vector2( 272, 64 )

[node name="HUD" parent="." index="14" instance=ExtResource( 18 )]

[connection signal="body_entered" from="Signs/Sign" to="Signs/Sign" method="on_body_enter"]

[connection signal="body_exited" from="Signs/Sign" to="Signs/Sign" method="on_body_exit"]


